unit uBaseForm;

interface

uses
  Forms,Classes,Controls;

type
  TFrmBase = class(TForm);

  TFrmFrame = class(TFrmBase)
  public
    constructor Create(AOwner: TComponent);  overload;
    constructor Create(AOwner: TComponent;AParentWindow:THandle);  overload;
  end;

implementation

{ TFrmBase }

constructor TFrmFrame.Create(AOwner: TComponent);
begin
  inherited;
  BorderStyle := bsNone;
  Hide;
  //ParentWindow := TWinControl(AOwner).Handle;
  Align := alClient;
end;

constructor TFrmFrame.Create(AOwner: TComponent;AParentWindow:THandle);
begin
  Create(AOwner);
  if AParentWindow = 0 then
  begin
    if AOwner is TWinControl then
      Parent := TWinControl(AOwner)
  end else
    ParentWindow := AParentWindow;
//  inherited Create(AOwner);
//  BorderStyle := bsNone;
//  Hide;
//  ParentWindow := AParentWindow;
//  Align := alClient;
end;

end.

